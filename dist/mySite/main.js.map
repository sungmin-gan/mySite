{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/DataTransferService.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/page-contact/contact.component.ts","./src/app/page-contact/contact.component.html","./src/app/page-home/home.component.ts","./src/app/page-home/home.component.html","./src/app/page-projects/projects.component.ts","./src/app/page-projects/projects.component.html","./src/app/page-services/services.component.ts","./src/app/page-services/services.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DataTransferService {\r\n  private _mode = new Subject<boolean>();\r\n  private _page = new Subject<string>();\r\n\r\n  viewMode$ = this._mode.asObservable();\r\n  viewPage$ = this._page.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  updateMode(mode: boolean) {\r\n    this._mode.next(mode);\r\n  }\r\n\r\n  updatePage(page: string) {\r\n    this._page.next(page);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomePage } from './page-home/home.component';\nimport { ServicesPage } from './page-services/services.component';\nimport { ContactPage } from './page-contact/contact.component';\nimport { ProjectsPage } from './page-projects/projects.component';\n\nconst routes: Routes = [\n  { path: '', \n        component: HomePage \n      },\n  { path: 'services', \n        component: ServicesPage,\n  },\n  { path: 'projects',\n        component: ProjectsPage, \n  },\n  { path: 'contact', \n        component: ContactPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\nimport { DataTransferService } from './DataTransferService';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {  \n  \n  lightMode = false;\n\n  page = \"home\";\n  \n  constructor(private dataTransfer: DataTransferService) {\n    this.dataTransfer.viewMode$.subscribe((mode) => (this.lightMode = mode));\n    this.dataTransfer.viewPage$.subscribe((page) => (this.page = page));\n  }\n  \n  ngDoCheck() {\n    this.dataTransfer.updateMode(this.lightMode);\n  }\n\n\n\n  \n}\n","<header [ngClass]=\"{'header-light' : lightMode}\">\n  <div class=\"container-nav\">\n    <div class=\"title\" [ngClass]=\"{'title-light' : lightMode}\">\n      <h1><a [routerLink]=\"['']\">SUNGMIN GAN</a></h1>\n      <p>Front-End Web Developer</p>\n    </div>\n    <nav>\n      <ul class=\"navList\" [ngClass]=\"{'navList-light' : lightMode}\">\n        <li [ngClass]=\"{'disabled' : !lightMode && page=='home', 'disabled-light' : lightMode && page=='home'}\">\n          <a [routerLink]=\"['']\">HOME</a>\n        </li>\n        <li [ngClass]=\"{'disabled' : !lightMode && page=='resume', 'disabled-light' : lightMode && page=='resume'}\">\n          <a [routerLink]=\"['/services']\">RESUME</a>\n        </li>\n        <li [ngClass]=\"{'disabled' : !lightMode && page=='projects', 'disabled-light' : lightMode && page=='projects'}\">\n          <a [routerLink]=\"['/projects']\">PROJECTS</a>\n        </li>\n        <li [ngClass]=\"{'disabled' : !lightMode && page=='contact', 'disabled-light' : lightMode && page=='contact'}\">\n          <a [routerLink]=\"['/contact']\">CONTACT</a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n</header>\n<main [ngClass]=\"{'main-light' : lightMode}\">\n  <router-outlet></router-outlet>\n</main>\n<footer [ngClass]=\"{'footer-light' : lightMode}\">\n  <p>Designed & created by Sungmin Gan</p>\n</footer>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HomePage } from './page-home/home.component';\nimport { ServicesPage } from './page-services/services.component';\nimport { ProjectsPage } from './page-projects/projects.component'\nimport { ContactPage } from './page-contact/contact.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePage,\n    ServicesPage,\n    ProjectsPage,\n    ContactPage,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule,\n    AppRoutingModule ,\n    BrowserAnimationsModule\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { DataTransferService } from '../DataTransferService';\n\n@Component({\n    selector: \"page-contact\",\n    templateUrl: \"./contact.component.html\",\n    styleUrls: [\"./contact.component.css\"],\n    animations: [],\n})\n\n\n\nexport class ContactPage {\n\n    lightMode = false;\n\n    constructor(private dataTransfer: DataTransferService) {\n        this.dataTransfer.viewMode$.subscribe((mode) => (this.lightMode = mode));\n        this.dataTransfer.updatePage(\"contact\");\n    }\n\n}","<div class=\"container-page\">\n  <div class=\"container-contact\" [ngClass]=\"{'container-contact-light' : lightMode}\">\n    <div class=\"card\" [ngClass]=\"{'card-light' : lightMode}\">\n      <i class=\"fas fa-user-astronaut icon-contact\" [ngClass]=\"{'icon-contact-light' : lightMode}\"></i>\n      <div class=\"card-text-container\">\n        <div class=\"card-text\" [ngClass]=\"{'card-text-light' : lightMode}\">\n          <br><i class=\"fab fa-linkedin icon-info\" [ngClass]=\"{'card-text-light' : lightMode}\"></i><a href=\"https://www.linkedin.com/in/sungmin-gan\" target=_blank>linkedin.com/in/sungmin-gan</a>\n        </div>\n      </div>\n      \n    </div>\n    <form action=\"POST\" data-netlify=\"true\" [ngClass]=\"{'form-light' : lightMode}\">\n      <div class=\"basic\">\n        <div class=\"col-1\">\n          <label for=\"fname\">First name:</label><br>\n          <input type=\"text\" id=\"fname\" name=\"fname\" required><br>\n        </div>\n        <div class=\"col-2\">\n          <label for=\"lname\">Last name:</label><br>\n          <input type=\"text\" id=\"lname\" name=\"lname\" required>\n        </div>\n      </div>\n      <div class=\"contact-info\">\n        <label for=\"company\">eMail:</label><br>\n        <input type=\"text\" id=\"company\" name=\"company\"><br>\n      </div>\n      <div class=\"purpose-text\">\n        <p>I am contacting you about...</p>\n      </div>\n      <div class=\"purpose-buttons\">\n        <div class=\"col-4\">\n          <input type=\"radio\" id=\"job-lt\" name=\"purpose\" value=\"job-lt\">\n          <label for=\"job-lt\">A long-term job</label><br>\n          <input type=\"radio\" id=\"job-st\" name=\"purpose\" value=\"job-st\">\n          <label for=\"job-st\">A short-term job</label>\n        </div>\n        <div class=\"col-5\">\n          <input type=\"radio\" id=\"feedback\" name=\"purpose\" value=\"feedback\">\n          <label for=\"feedback\">Giving feedback</label><br>\n          <input type=\"radio\" id=\"other\" name=\"purpose\" value=\"other\">\n          <label for=\"other\">Something else</label>\n        </div>\n      </div>\n      <div class=\"comments\" [ngClass]=\"{'comments-light' : lightMode}\">\n        <p>Message:</p>\n        <textarea required></textarea>\n      </div>\n      <div class=\"field\">\n        <div data-netlify-recaptcha=\"true\"></div>\n      </div>\n      <input type=\"submit\" value=\"SEND\" class=\"submit\">\n    </form>\n  </div>\n</div>\n\n","import { Component, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { DataTransferService } from '../DataTransferService';\n\n@Component({\n    selector: \"page-home\",\n    templateUrl: \"./home.component.html\",\n    styleUrls: [\"./home.component.css\"],\n    animations: [],\n})\n\nexport class HomePage {\n\n    lightMode;\n\n    constructor( private dataTransfer: DataTransferService) {\n        this.dataTransfer.viewMode$.subscribe((mode) => (this.lightMode = mode));\n        this.dataTransfer.updatePage(\"home\");\n    }\n\n    makeLight() {\n        this.dataTransfer.updateMode(true);\n    }\n    makeDark() {\n        this.dataTransfer.updateMode(false);\n    }\n    \n\n}","<div class=\"banner\" [ngClass]=\"{'banner-light' : lightMode}\">\n  <h2>WELCOME</h2>\n  <div class=\"container-mode\" [ngClass]=\"{'container-mode-light' : lightMode}\">\n    <p class=\"light\" [ngClass]=\"{'light-light' : lightMode}\" (click)=\"makeLight()\">LIGHT MODE</p>\n    <p class=\"dark\" [ngClass]=\"{'dark-light' : lightMode}\" (click)=\"makeDark()\">DARK MODE</p>\n  </div>\n</div>\n\n<div class=\"container-about\" [ngClass]=\"{'container-about-light' : lightMode}\">\n\n  <div class=\"container-photo-left\" [ngClass]=\"{'container-plank-light' : lightMode}\">\n    <div class=\"container-img\">\n      <i class=\"far fa-user-circle icon-home\"></i>\n    </div>\n    <div class=\"container-text\" style=\"margin-right: 2em;\">\n      <h2>A little bit about me</h2>\n      <p>Hey there! I'm Sungmin, a budding web developer based in the San Francisco Bay Area. I'm a recent graduate of Cal State East Bay (located in Hayward, Califonia), and I received a B.S. in Computer Science. Although web development is my passion and primary focus, I also have experience writing programs in C++, Python, and Java.\n      </p>\n    </div>\n  </div>\n\n  <div class=\"container-photo-left\" [ngClass]=\"{'container-plank-light' : lightMode}\">\n    <div class=\"container-img\">\n      <i class=\"fas fa-heartbeat icon-home\"></i>\n    </div>\n    <div class=\"container-text\" style=\"margin-right: 2em;\">\n      <h2>Why did I choose to become a web developer?</h2>\n      <p>My journey to becoming a programmer actually happened by accident. During my early college years, I wasn't really sure what career I wanted to pursue. Trying to play it \"safe,\" I pursued a Business degree, during which I chose a computer science class for an elective. Lo and behold! I had found my passion. The sheer amount of potential in programming still continues to amaze me. Being the creative person that I am, going into web development was a very natural fit for me.</p>\n    </div>\n  </div>\n\n  <div class=\"container-photo-left panel-3\" [ngClass]=\"{'container-plank-light' : lightMode}\">\n    <div class=\"container-img\">\n      <i class=\"fas fa-mug-hot icon-home\"></i>\n    </div>\n    <div class=\"container-text\" style=\"margin-right: 2em;\">\n      <h2>Coding Philosophy</h2>\n      <p>I like to keep it simple. My two priorities when making websites are functionality and aesthetics. It's crucial to write good code at every stage of a project, so that its structure is stable and easily built-upon or modifiable. At the same time, the finished product should be pleasing to the eye and intuitive to the viewer. This balance - of function and form - is an aspect of my work I'm looking forward to developing in my career. </p>\n    </div>\n  </div>\n\n</div>\n\n\n","import { Component } from '@angular/core';\nimport { DataTransferService } from '../DataTransferService';\n\n@Component({\n    selector: \"page-projects\",\n    templateUrl: \"./projects.component.html\",\n    styleUrls: [\"./projects.component.css\"],\n    animations: [],\n})\n\nexport class ProjectsPage {\n\n    lightMode = false;\n\n    filter = \"all\";\n\n    constructor(private dataTransfer: DataTransferService) {\n        this.dataTransfer.viewMode$.subscribe((mode) => (this.lightMode = mode));\n        this.dataTransfer.updatePage(\"projects\");\n    }\n\n    filterSwitch(keyword) {\n        this.filter = keyword; \n    }\n\n    allStyles(): Object {\n        if(!this.lightMode && this.filter==\"all\"){\n            return {background: '#333'}\n        }\n        else if (this.lightMode && this.filter==\"all\") {\n            return {background: 'lightgrey'}\n        }\n        else {\n            return null;\n        }\n    }\n    angularStyles(): Object {\n        if(!this.lightMode && this.filter==\"angular\"){\n            return {background: '#333'}\n        }\n        else if (this.lightMode && this.filter==\"angular\") {\n            return {background: 'lightgrey'}\n        }\n        else {\n            return null;\n        }\n    }\n    reactStyles(): Object {\n        if(!this.lightMode && this.filter==\"react\"){\n            return {background: '#333'}\n        }\n        else if (this.lightMode && this.filter==\"react\") {\n            return {background: 'lightgrey'}\n        }\n        else {\n            return null;\n        }\n    }\n    pythonStyles(): Object {\n        if(!this.lightMode && this.filter==\"python\"){\n            return {background: '#333'}\n        }\n        else if (this.lightMode && this.filter==\"python\") {\n            return {background: 'lightgrey'}\n        }\n        else {\n            return null;\n        }\n    }\n\n\n}","<div class=\"container-projects-page\" [ngClass]=\"{'container-page-light' : lightMode}\">\n  <ul class=\"tags\" [ngClass]=\"{'tags-light' : lightMode}\">\n    <li (click)=\"filterSwitch('all')\" [ngStyle]=\"allStyles()\">All</li>\n    <li (click)=\"filterSwitch('angular')\" [ngStyle]=\"angularStyles()\">Angular</li>\n    <li (click)=\"filterSwitch('react')\" [ngStyle]=\"reactStyles()\">React</li>\n    <li (click)=\"filterSwitch('python')\" [ngStyle]=\"pythonStyles()\">Python</li>\n  </ul>\n\n  <div class=\"container-projects\">\n\n    <div class=\"row\">\n\n      <div *ngIf=\"filter=='all' || filter=='angular'\" class=\"project-card\" [ngClass]=\"{'card-light' : lightMode}\">\n        <div class=\"img i-1\"></div>\n        <div class=\"project-text\" [ngClass]=\"{'project-text-light' : lightMode}\">\n          <h4>SUNGMIN GAN v2.0</h4>\n          <p>Angular, Mobile-friendly</p>\n        </div>\n      </div>\n  \n      <div *ngIf=\"filter=='all' || filter=='react'\" class=\"project-card\" [ngClass]=\"{'card-light' : lightMode}\"> \n        <div class=\"img i-2\">\n          <p class=\"visit\">\n            <a href=\"https://alcostasmokeshop.netlify.app\" target=\"_blank\">\n            VISIT\n            </a>\n          </p>\n        </div>\n        <div class=\"project-text\" [ngClass]=\"{'project-text-light' : lightMode}\">\n          <h4><a href=\"https://alcostasmokeshop.netlify.app\" target=\"blank\">ALCOSTA SMOKE SHOP</a></h4>\n          <p>React</p>\n        </div>\n      </div>\n  \n      <div *ngIf=\"filter=='all' || filter=='python'\" class=\"project-card\" [ngClass]=\"{'card-light' : lightMode}\">\n        <div class=\"img i-3\">\n          <p class=\"visit\">\n            <a href=\"https://github.com/sungmin-gan/AntColonyOptimization/wiki/Solving-the-Traveling-Salesman-Problem-with--Ant-Colony-Optimization\" target=\"_blank\">\n            VISIT\n            </a>\n          </p>\n        </div>\n        <div class=\"project-text\" [ngClass]=\"{'project-text-light' : lightMode}\">\n          <h4><a href=\"https://github.com/sungmin-gan/AntColonyOptimization/wiki/Solving-the-Traveling-Salesman-Problem-with--Ant-Colony-Optimization\" target=\"blank\">ANT COLONY AI</a></h4>\n          <p>Python</p>\n        </div>\n      </div>\n  \n      <div *ngIf=\"filter=='all' || filter=='react'\" class=\"project-card\" [ngClass]=\"{'card-light' : lightMode}\">\n        <div class=\"img i-4\">\n          <p class=\"visit\">\n            <a href=\"https://joonrain.netlify.app\" target=\"_blank\">\n            VISIT\n            </a>\n          </p>\n        </div>\n        <div class=\"project-text\" [ngClass]=\"{'project-text-light' : lightMode}\">\n          <h4><a href=\"https://joonrain.netlify.app\" target=\"blank\">JOON-RAIN BLOG</a></h4>\n          <p>React</p>\n        </div>\n      </div>\n  \n      <div *ngIf=\"filter=='all' || filter=='angular'\" class=\"project-card\" [ngClass]=\"{'card-light' : lightMode}\">\n        <div class=\"img i-5\">\n          <p class=\"visit\">\n            <a href=\"https:/sungmin-gan.com\" target=\"_blank\">\n            VISIT\n            </a>\n          </p>\n        </div>\n        <div class=\"project-text\" [ngClass]=\"{'project-text-light' : lightMode}\">\n          <h4><a href=\"https:/sungmin-gan.com\" target=\"blank\">SUNGMIN GAN v1.0</a></h4>\n          <p>Angular</p>\n        </div>\n      </div>\n\n    </div>\n    \n  </div>\n\n</div>\n\n\n","import { Component } from '@angular/core';\nimport { DataTransferService } from '../DataTransferService';\n\n\n@Component({\n    selector: \"page-services\",\n    templateUrl: \"./services.component.html\",\n    styleUrls: [\"./services.component.css\"],\n    animations: [],\n})\n\nexport class ServicesPage {\n\n    lightMode = false;\n\n    constructor(private dataTransfer: DataTransferService) {\n        this.dataTransfer.viewMode$.subscribe((mode) => (this.lightMode = mode));\n        this.dataTransfer.updatePage(\"resume\");\n    }\n      \n}","<div class=\"container-slats\">\n\n    <div class=\"slats slat-1\">\n        <div class=\"container-label icon-resume\" [ngClass]=\"{'container-label-light' : lightMode}\">\n            <div class=\"container-icon\">\n                <i class=\"fas fa-tasks\"></i>\n            </div>\n            <h3>SKILLS</h3>\n        </div>\n        <div class=\"container-description description-skill\">\n            <div class=\"skill\">\n                <div class=\"container-skill-icon\">\n                    <i class=\"fas fa-thermometer-three-quarters icon-skill\"></i>\n                </div>\n                <p>HTML, CSS, JAVASCRIPT</p>\n            </div>\n            <div class=\"skill\">\n                <div class=\"container-skill-icon\">\n                    <i class=\"fas fa-thermometer-half icon-skill\"></i>\n                </div>\n                <p>ANGULAR</p>\n            </div>\n            <div class=\"skill\">\n                <div class=\"container-skill-icon\">\n                    <i class=\"fas fa-thermometer-quarter icon-skill\"></i>\n                </div>\n                <p>REACT</p>\n            </div>\n            <div class=\"skill\">\n                <div class=\"container-skill-icon\">\n                    <i class=\"fas fa-thermometer-half icon-skill\"></i>\n                </div>\n                <p>C++</p>\n            </div>\n            <div class=\"skill\">\n                <div class=\"container-skill-icon\">\n                    <i class=\"fas fa-thermometer-half icon-skill\"></i>\n                </div>\n                <p>PYTHON</p>\n            </div>\n            \n        </div>\n    </div>\n\n    <div class=\"slats slat-2\">\n        <div class=\"container-label icon-resume\" [ngClass]=\"{'container-label-light' : lightMode}\">\n            <div class=\"container-icon\">\n                <i class=\"fas fa-landmark\"></i>\n            </div>\n            <h3>EDUCATION</h3>\n        </div>\n        <div class=\"container-description\">\n            <div class=\"school-1\">\n                <p>COMPUTER SCIENCE, B.S.</p>\n                <p>Cal State East Bay, Hayward, CA<br>May 2020</p>\n            </div>\n            <div class=\"school-2\">\n                <p>BUSINESS ADMINISTRATION, A.S.<br>\n                SOCIAL SCIENCE, A.S.</p>\n                <p>Laney College, Oakland, CA<br>December 2017</p>\n            </div>\n            \n        </div>\n    </div>\n\n    <div class=\"slats slat-3\">\n        <div class=\"container-label icon-resume\" [ngClass]=\"{'container-label-light' : lightMode}\">\n            <div class=\"container-icon\">\n                <i class=\"fas fa-tools\"></i>\n            </div>\n            <h3>WORK EXPERIENCE</h3>\n        </div>\n        <div class=\"container-description description-work\">\n            <div class=\"school-1\">\n                <p>iD TECH CAMP\n                <br>Coding Instructor | Jun - Aug 2019\n                </p>\n                <p>Taught JavaScript and Python by building simple robots, laptops, and circuits with students\n                </p>\n            </div>\n            <div class=\"school-2\">\n                <p>HOPSCOTCH RESTAURANT & BAR\n                <br>Server | 2017 - 2020\n                </p>\n                <p>Helped build my core work ethics, promoted from busser to server within one year of start\n                </p>\n            </div>\n        </div>\n    </div>\n\n    \n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport { RouterModule } from '@angular/router';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n\n\n  \n"],"sourceRoot":"webpack:///"}